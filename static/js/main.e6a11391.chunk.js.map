{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","addMovie","useState","setQuery","setMovie","hasError","setError","hasLoaded","setLoading","handleFind","event","a","preventDefault","current","correctimgUrl","Poster","foundedMovie","Title","Plot","imdbID","onSubmit","htmlFor","type","id","value","onChange","target","replace","placeholder","classNames","disabled","onClick","App","setMovies","every","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6a11391.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=a60c1c1e';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import classNames from 'classnames';\nimport React, { ChangeEvent, useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [hasError, setError] = useState(false);\n  const [hasLoaded, setLoading] = useState(false);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value.replace(/[^a-zA-Z_0-9-]/g, ''));\n    setError(false);\n  };\n\n  const handleFind = async (event: React.FormEvent) => {\n    try {\n      event.preventDefault();\n      setLoading(true);\n      const current = await getMovie(query);\n\n      if ('Error' in current) {\n        setError(true);\n        setLoading(false);\n\n        return;\n      }\n\n      const correctimgUrl = current.Poster === 'N/A'\n        ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n        : current.Poster;\n\n      const foundedMovie = {\n        title: current.Title,\n        description: current.Plot,\n        imgUrl: correctimgUrl,\n        imdbUrl: `https://www.imdb.com/title/${current.imdbID}`,\n        imdbId: current.imdbID,\n      };\n\n      setMovie(foundedMovie);\n    } finally {\n      setError(false);\n      setLoading(false);\n    }\n  };\n\n  const handleAdd = () => {\n    if (movie) {\n      addMovie(movie);\n    }\n\n    setQuery('');\n    setError(false);\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleFind}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              value={query}\n              onChange={handleChange}\n              placeholder=\"Enter a title to search\"\n              className={classNames('input',\n                { 'is-dander': hasError })}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              disabled={!query}\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light',\n                { 'is-loading': hasLoaded })}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAdd}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    if (movies.every(item => item.imdbId !== movie.imdbId)) {\n      setMovies([...movies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}